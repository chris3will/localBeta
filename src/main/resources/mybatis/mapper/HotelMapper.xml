<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.hotel.demo.dao.HotelMapper">
  <resultMap id="BaseResultMap" type="com.springboot.hotel.demo.entity.Hotel">
    <id column="hotelId" jdbcType="INTEGER" property="hotelid" />
    <result column="hotelChinesename" jdbcType="VARCHAR" property="hotelchinesename" />
    <result column="hotelEnglishname" jdbcType="VARCHAR" property="hotelenglishname" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="score" jdbcType="INTEGER" property="score" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    hotelId, hotelChinesename, hotelEnglishname, location, nation, province, city, region, 
    address, score
  </sql>
  <select id="selectByExample" parameterType="com.springboot.hotel.demo.entity.HotelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hotel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hotel
    where hotelId = #{hotelid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from hotel
    where hotelId = #{hotelid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.springboot.hotel.demo.entity.HotelExample">
    delete from hotel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.springboot.hotel.demo.entity.Hotel">
    insert into hotel (hotelId, hotelChinesename, hotelEnglishname, 
      location, nation, province, 
      city, region, address, 
      score)
    values (#{hotelid,jdbcType=INTEGER}, #{hotelchinesename,jdbcType=VARCHAR}, #{hotelenglishname,jdbcType=VARCHAR}, 
      #{location,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{score,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.hotel.demo.entity.Hotel">
    insert into hotel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hotelid != null">
        hotelId,
      </if>
      <if test="hotelchinesename != null">
        hotelChinesename,
      </if>
      <if test="hotelenglishname != null">
        hotelEnglishname,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="score != null">
        score,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hotelid != null">
        #{hotelid,jdbcType=INTEGER},
      </if>
      <if test="hotelchinesename != null">
        #{hotelchinesename,jdbcType=VARCHAR},
      </if>
      <if test="hotelenglishname != null">
        #{hotelenglishname,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.springboot.hotel.demo.entity.HotelExample" resultType="java.lang.Long">
    select count(*) from hotel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hotel
    <set>
      <if test="record.hotelid != null">
        hotelId = #{record.hotelid,jdbcType=INTEGER},
      </if>
      <if test="record.hotelchinesename != null">
        hotelChinesename = #{record.hotelchinesename,jdbcType=VARCHAR},
      </if>
      <if test="record.hotelenglishname != null">
        hotelEnglishname = #{record.hotelenglishname,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hotel
    set hotelId = #{record.hotelid,jdbcType=INTEGER},
      hotelChinesename = #{record.hotelchinesename,jdbcType=VARCHAR},
      hotelEnglishname = #{record.hotelenglishname,jdbcType=VARCHAR},
      location = #{record.location,jdbcType=VARCHAR},
      nation = #{record.nation,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.hotel.demo.entity.Hotel">
    update hotel
    <set>
      <if test="hotelchinesename != null">
        hotelChinesename = #{hotelchinesename,jdbcType=VARCHAR},
      </if>
      <if test="hotelenglishname != null">
        hotelEnglishname = #{hotelenglishname,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
    </set>
    where hotelId = #{hotelid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.hotel.demo.entity.Hotel">
    update hotel
    set hotelChinesename = #{hotelchinesename,jdbcType=VARCHAR},
      hotelEnglishname = #{hotelenglishname,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER}
    where hotelId = #{hotelid,jdbcType=INTEGER}
  </update>
</mapper>